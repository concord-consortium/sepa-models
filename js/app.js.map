{"version":3,"sources":["app/model/chart.coffee","app/model/environment-pens.coffee","app/model/environment-rules.coffee","app/model/environment.coffee","app/model/model.coffee","app/species/biologica/sandrats.coffee","app/species/chow.coffee","app/species/sandrats-long-life.coffee","app/species/sandrats.coffee"],"names":[],"mappings":"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","file":"public/js/app.js","sourcesContent":["helpers = require 'helpers'\n\nmodule.exports = Chart = class Chart\n\n    constructor: (@model, @parent, @location) ->\n      @_guides = {}\n      @_data = []\n      @_timeBased = false\n      @_timeProp = null\n      @_time = 0\n\n    # [ {property: \"diabetic\", title: \"Diabetic Rats\", description: \"with diabetes\"}, {property: \"healthy\", title: \"Healthy Rats\"} ]\n    setData: (@properties) ->\n      @_data = []\n      if @properties.length is 1 and @properties[0].timeBased\n        @_timeBased = true\n        @_timeProp = @properties[0]\n        for i in [1..30]\n          @_data.push\n            category: i\n            description: @_timeProp.description\n      else\n        @_timeBased = false\n        for prop in @properties\n          @_data.push\n            category: prop.title\n            description: prop.description\n            count: 0\n            property: prop.property\n\n    # draw initial graph or replace existing\n    reset: ->\n      @setData @properties\n      @parent.innerHTML = \"\"\n      @_time = 0\n      @_drawChart()\n      @update()\n\n    update: ->\n      if not @model.isSetUp then return\n\n      newData = @model.current_counts[@location]\n\n      if not @_timeBased\n        for column in @_data\n          column.count = newData[column.property]\n      else\n        timeChartTime = @_time\n        datum = helpers.clone @_data[0]\n        datum.category = timeChartTime\n        datum.count = newData[@_timeProp.property]\n        datum.base  = -2\n        datum.color = 'hsl(0,100%,55%)'\n        if timeChartTime <= @_data.length\n          @_data[timeChartTime-1] = datum\n          @_data[timeChartTime-2]?.color = 'hsl(0,100%,85%)'\n        else\n          @_data.shift()\n          @_data.push datum\n          @_data[@_data.length-2]?.color = 'hsl(0,100%,85%)'\n\n        @_extendOpenPeriods()\n        @_time++\n\n      @chart.validateData()\n\n    _drawChart: ->\n      opts = helpers.clone @_defaultChartProps\n\n      if @_timeBased\n        opts.valueAxes[0].title = @_timeProp.yAxis\n        opts.valueAxes[0].minimum = -2\n\n      opts.dataProvider = @_data\n\n      @chart = AmCharts.makeChart @parent, opts\n\n\n    _defaultChartProps:\n      type: 'serial'\n      theme: 'light'\n      marginTop: 10\n      marginRight: 0\n      marginLeft: 0\n      marginBottom: 0\n      categoryAxis:\n        dashLength: 1\n        minorGridEnabled: true\n      valueAxes: [\n        {\n          title: 'Number of Rats'\n          autoGridCount: false\n          gridCount: 6\n          showFirstLabel: false\n          strictMinMax: true\n          minimum: 0\n          maximum: if @location is 'all' then 50 else 30\n          position: 'left'\n        }\n      ]\n      categoryField: 'category'\n      graphs: [\n        {\n          balloonText: \"<b>[[value]]</b> [[description]]\"\n          fillAlphas: 0.8\n          lineAlpha: 0.2\n          type: \"column\"\n          valueField: \"count\"\n          openField: \"base\"\n          lineColorField: 'color'\n          fillColorsField: 'color'\n          colorField: 'color'\n        }\n      ]\n\n\n\n    startPeriod: (id)->\n      if not @_timeBased then return\n\n      guide = new AmCharts.Guide\n      # For whatever reason, passing these options in as a hash does *not* work!\n      guide.color = '#999999'\n      guide.fillColor = 'hsl(200, 100%, 92%)'\n      guide.fillAlpha = 0.4\n      guide.category = ''+Math.ceil @_time\n      guide.toCategory = ''+Math.ceil @_time\n      guide.expand = true\n      guide.label = 'Sugary food added'\n      guide.position = 'left'\n      guide.inside = true\n      guide.labelRotation = 90\n      @_guides[id] = guide\n\n      @chart?.categoryAxis.addGuide guide\n      # return\n\n    endPeriod: (id)->\n      delete @_guides[id]\n\n    _extendOpenPeriods: ()->\n      if not @_timeBased then return\n\n      for own id,guide of @_guides\n        guide.toCategory = ''+Math.ceil @_time\n\n      # also trim guides on the far left\n      leftDate = @_data[0].category\n      if leftDate > 1\n        for guide in @chart?.categoryAxis?.guides\n          if guide.category < leftDate && guide.toCategory >= leftDate\n            guide.category = leftDate\n      return\n\n\n  module.exports = Chart\n","Environment   = require 'models/environment'\nEnvRules      = require './environment-rules'\n\nenv = new Environment\n  columns:  60\n  rows:     45\n  imgPath: \"images/environments/pens.png\"\n  wrapEastWest: false\n  wrapNorthSouth: false\n  barriers: [\n    [170, 0, 55, 450]       # Vertical - left-center\n    [220, 200, 380, 50]     # Horizontal - divides top and bottom right-side pens\n  ]\n\nEnvRules.init env\n\n# env.getView().showingBarriers = true\n\nmodule.exports = env\n","\nRule          = require 'models/rule'\n\nworstChance = 0.2\ndiabetesChance = (agent) ->\n  odds = 0\n  for color in ['red', 'yellow', 'blue']\n    colorLevel = agent.get(color+' diabetes')\n    if colorLevel is 'level1'\n      odds += if window.CONFIG?.diabetes?[color]?.level1? then window.CONFIG.diabetes[color].level1 else (1/6)\n    else if colorLevel is 'level2'\n      odds += if window.CONFIG?.diabetes?[color]?.level2? then window.CONFIG.diabetes[color].level2 else (2/6)\n    else if colorLevel is 'none'\n      if window.CONFIG?.diabetes?[color]?['none']?\n        odds += window.CONFIG.diabetes[color]['none']\n\n  return worstChance * odds\n\nmodule.exports =\n  init: (env)->\n    # Add weight when eating chow\n    env.addRule new Rule\n      test: (agent)->\n        return agent.species.speciesName is \"sandrats\" and\n                agent.get('chow') and\n                agent.get('weight') < 220 and\n                Math.random() < 0.15 # 0.16?\n      action: (agent) ->\n        agent.set 'weight', agent.get('weight') + Math.floor(Math.random() * 5)\n\n    # Remove weight when not eating chow\n    env.addRule new Rule\n      test: (agent)->\n        return agent.species.speciesName is \"sandrats\" and\n                agent.get('chow') isnt true and\n                agent.get('weight') > 155 and\n                Math.random() < 0.15 # 0.16?\n      action: (agent) ->\n        agent.set 'weight', agent.get('weight') - Math.floor(Math.random() * 5)\n\n    # Get diabetes if heavy (> 170) and prone\n    # p(get diabetes) at 170: 0\n    # p(get diabetes) at 200: 0.1 per step\n    env.addRule new Rule\n      test: (agent)->\n        return agent.species.speciesName is \"sandrats\" and\n                agent.get('has diabetes') isnt true and\n                agent.get('prone to diabetes') and\n                (w = agent.get('weight')) > 170 and\n                Math.random() < (((w - 170) / 30) * diabetesChance(agent))\n      action: (agent) ->\n        agent.set 'has diabetes', true\n\n    # Lose diabetes if not heavy (< 170) and prone\n    # p(lose diabetes) at 170: 0\n    # p(lose diabetes) at 150: 0.1 per step\n    env.addRule new Rule\n      test: (agent)->\n        return agent.species.speciesName is \"sandrats\" and\n                agent.get('has diabetes') is true and\n                (w = agent.get('weight')) < 170 and\n                Math.random() < ((-(w - 170) / 20) * (worstChance - diabetesChance(agent)))\n      action: (agent) ->\n        agent.set 'has diabetes', false\n","Environment   = require 'models/environment'\nEnvRules      = require './environment-rules'\n\nenv = new Environment\n  columns:  60\n  rows:     45\n  imgPath: \"images/environments/field.png\"\n  wrapEastWest: false\n  wrapNorthSouth: false\n\nEnvRules.init env\n\nmodule.exports = env\n","helpers     = require 'helpers'\n\nEnvironment = require 'models/environment'\nEnvironment = require 'models/environment'\nSpecies     = require 'models/species'\nAgent       = require 'models/agent'\nTrait       = require 'models/trait'\nInteractive = require 'ui/interactive'\nEvents      = require 'events'\nToolButton  = require 'ui/tool-button'\nBasicAnimal = require 'models/agents/basic-animal'\n\nChart       = require './chart'\n\nbiologicaSandratSpecies = require '../species/biologica/sandrats'\nfastRats        = require '../species/sandrats'\nslowRats        = require '../species/sandrats-long-life'\nchowSpecies     = require '../species/chow'\n\npensEnvironment  = require './environment-pens'\nfieldEnvironment = require './environment'\n\nenvironmentType = if window.CONFIG?.environment? then window.CONFIG.environment else \"pens\"\nenv = switch environmentType\n  when \"pens\"  then pensEnvironment\n  when \"field\" then fieldEnvironment\n\nwindow.model =\n  run: ->\n    environmentType = if window.CONFIG?.environment? then window.CONFIG.environment else \"pens\"\n    env = switch environmentType\n      when \"pens\"  then pensEnvironment\n      when \"field\" then fieldEnvironment\n\n    for agent in env.agents by -1\n      env.removeAgent agent\n\n    @interactive = new Interactive\n      environment: env\n      toolButtons: [\n        {\n          type: ToolButton.INFO_TOOL\n        }\n        {\n          type: ToolButton.CARRY_TOOL\n        }\n      ]\n\n    document.getElementById('environment').appendChild @interactive.getEnvironmentPane()\n\n    @env = env\n\n    @locations =\n      all: {x: 0,                        y: 0,                         width: @env.width,                 height: @env.height }\n      w:   {x: 0,                        y: 0,                         width: Math.round(@env.width/3),   height: @env.height }\n      ne:  {x: Math.round(@env.width/3), y: 0,                         width: Math.round(@env.width/3)*2, height: Math.round(@env.height/2)}\n      se:  {x: Math.round(@env.width/3), y: Math.round(@env.height/2), width: Math.round(@env.width/3)*2, height: Math.round(@env.height/2)}\n\n    @stopDate = 0\n    @timeGraphInterval = @graphInterval * 2\n    @setupEnvironment()\n    @isSetUp = true\n    @secondsPerSample = 1\n    @graphInterval = Math.ceil(@targetFPS()*@secondsPerSample)\n\n  targetFPS: ()->\n    return 1000/(if @env? then @env._runLoopDelay else Environment.DEFAULT_RUN_LOOP_DELAY)\n\n  agentsOfSpecies: (species)->\n    set = []\n    for a in @env.agents\n      set.push a if a.species is species\n    return set\n\n  _countRats: (rectangle) ->\n    data = {}\n\n    rats = (a for a in @env.agentsWithin(rectangle) when a.species is @sandratSpecies)\n\n    data = {date: Math.floor(@env.date/@graphInterval)*@secondsPerSample, total: rats.length, healthy: 0, diabetic: 0, prone: 0, notProne: 0, thin: 0, medium: 0, obese: 0}\n    for a in rats\n      if a.get('has diabetes')\n        data.diabetic++\n      else\n        data.healthy++\n\n      if a.get('prone to diabetes')\n        data.prone++\n      else\n        data.notProne++\n\n      weight = Math.floor(a.get('weight') / 10) * 10\n      if weight < 160\n        data.thin++\n      else if weight < 180\n        data.medium++\n      else\n        data.obese++\n\n    return data\n\n  countRatsInAreas: ->\n    if @isFieldModel\n      @current_counts.all = @_countRats(@locations.all)\n    else\n      @current_counts.w  = @_countRats(@locations.w)\n      @current_counts.ne = @_countRats(@locations.ne)\n      @current_counts.se = @_countRats(@locations.se)\n\n  setupEnvironment: ->\n    for col in [0..(@env.columns)]\n      for row in [0..(@env.rows)]\n        @env.set col, row, \"chow\", false\n\n    speciesType = if window.CONFIG?.species? then window.CONFIG.species else \"fast\"\n    @sandratSpecies = if speciesType is \"fast\" then fastRats else slowRats\n\n    @addRats()\n\n    @current_counts =\n      all: {total: 0}\n      w:   {total: 0}\n      se:  {total: 0}\n      ne:  {total: 0}\n\n    if window.CONFIG?.timeLimit?\n      @stopDate = Math.floor window.CONFIG.timeLimit * model.targetFPS()\n      @timeGraphInterval = Math.floor @stopDate / 29\n    resetAndDrawCharts()\n\n  addRats: () ->\n    specifiedTraits = []\n    if window.CONFIG?.populationGenetics?\n      for alleles, quantity of window.CONFIG.populationGenetics\n        traits = @createTraits alleles\n        for [0...quantity]\n          specifiedTraits.push traits\n\n    if window.CONFIG?.startingRats?\n      while specifiedTraits.length < window.CONFIG.startingRats\n        specifiedTraits.push []\n\n    for traits in specifiedTraits\n      @addRat traits\n\n  createTraits: (alleles) ->\n    traits = []\n    redAlleles = []\n    yellowAlleles = []\n    blueAlleles = []\n    re = /[ab]:[^,]*/g\n    while (m = re.exec alleles) isnt null\n      redAlleles.push m[0] if ~m[0].search(/dr/i)\n      yellowAlleles.push m[0] if ~m[0].search(/dy/i)\n      blueAlleles.push m[0] if ~m[0].search(/db/i)\n\n    if redAlleles.length\n      traits.push new Trait {name: \"red diabetes\", default: redAlleles.join(\",\"), isGenetic: true}\n    if yellowAlleles.length\n      traits.push new Trait {name: \"yellow diabetes\", default: yellowAlleles.join(\",\"), isGenetic: true}\n    if blueAlleles.length\n      traits.push new Trait {name: \"blue diabetes\", default: blueAlleles.join(\",\"), isGenetic: true}\n    return traits\n\n  addRat: (traits) ->\n    loc = if @isFieldModel then @locations.all else @locations.w\n    rat = @sandratSpecies.createAgent(traits)\n    rat.set('age', 20 + (Math.floor Math.random() * 40))\n    rat.setLocation env.randomLocationWithin loc.x, loc.y, loc.width, loc.height, true\n    @env.addAgent rat\n\n  addChow: (n, loc) ->\n    for i in [0...n]\n      chow = chowSpecies.createAgent()\n      chow.setLocation env.randomLocationWithin loc.x, loc.y, loc.width, loc.height, true\n      @env.addAgent chow\n\n  removeChow: (loc) ->\n    agents = env.agentsWithin loc\n    agent.die() for agent in agents when agent.species.speciesName is \"chow\"\n    @env.removeDeadAgents()\n\n  setChow: (area, chow) ->\n    loc = @locations[area]\n    return unless loc?\n\n    for col in [(loc.x)..(loc.x+loc.width)] by @env._columnWidth\n      for row in [(loc.y)..(loc.y+loc.height)] by @env._rowHeight\n        @env.setAt col, row, \"chow\", chow\n    if chow\n      amount = Math.round(loc.width * loc.height / 7000)\n      @addChow(amount, loc)\n    else\n      @removeChow(loc)\n\n  _timesUp: ->\n    $('.time-limit-dialog').fadeIn(300)\n\nEvents.addEventListener Environment.EVENTS.RESET, =>\n  model.setupEnvironment()\n  $('.time-limit-dialog').fadeOut(300)\n  $('.chow-toggle').removeClass('on')\n  resetAndDrawCharts()\n\nEvents.addEventListener Environment.EVENTS.START, =>\n  $('.time-limit-dialog').fadeOut(300)\n\nEvents.addEventListener Environment.EVENTS.STEP, =>\n  model.countRatsInAreas()\n  updateCharts()\n  if model.stopDate > 0 and model.env.date is model.stopDate\n    model.env.stop()\n    model._timesUp()\n\nchart1 = null\nchart2 = null\n\nresetAndDrawCharts = ->\n  chart1?.reset()\n  chart2?.reset()\n\nupdateCharts = ->\n  updateStaticCharts = model.env.date % model.graphInterval is 1\n  updateTimeCharts = model.env.date % model.timeGraphInterval is 1\n  if (chart1?._timeBased and updateTimeCharts) or (!(chart1?._timeBased) and updateStaticCharts)\n    chart1.update()\n  if (chart2?._timeBased and updateTimeCharts) or (!(chart2?._timeBased) and updateStaticCharts)\n    chart2.update()\n\nchartTypes =\n    diabetes: [\n        {property: \"diabetic\", title: \"Diabetic Rats\", description: \"rats with diabetes\"},\n        {property: \"healthy\", title: \"Healthy Rats\", description: \"healthy rats\"}\n        ]\n    risk: [\n        {property: \"prone\", title: \"Risk of diabetes\", description: \"at risk of diabetes\"},\n        {property: \"notProne\", title: \"No risk of diabetes\", description: \"with no risk of diabetes\"}\n        ]\n    weight: [\n        {property: \"thin\", title: \"Thin\", description: \"thin rats\"},\n        {property: \"medium\", title: \"Heavy\", description: \"heavy rats\"},\n        {property: \"obese\", title: \"Obese\", description: \"obese rats\"}\n        ]\n    diabetesTime: [\n        {property: \"diabetic\", timeBased: true, description: \"rats with diabetes\", yAxis: \"Rats with diabetes\"},\n        ]\n\ndefaultChartTypes = [\"diabetes\", \"weight\", \"risk\", \"diabetesTime\"]\n\nupdatePulldowns = () ->\n  $('#chart-1-selector').html \"\"\n  $('#chart-2-selector').html \"\"\n  #<option selected=\"selected\" value=\"diabetes\">Sand Rats with Diabetes</option>\n  options =\n    diabetes: \"Sand Rats with Diabetes\"\n    weight: \"Weight of Sand Rats\"\n    risk: \"Risk of Diabetes\"\n    diabetesTime: \"Diabetes over time\"\n  if window.CONFIG?.chart?.options?\n    authoredOptions = window.CONFIG.chart.options\n  else\n    authoredOptions = defaultChartTypes\n\n  createSelectOption = (opt) ->\n    $(\"<option value='#{opt}'>#{options[opt]}</option>\")\n\n  for option in authoredOptions\n    $('#chart-1-selector').append createSelectOption(option)\n    $('#chart-2-selector').append createSelectOption(option)\n\n  setChartType chart1, chartTypes[authoredOptions[0]], 1\n  setChartType chart2, chartTypes[authoredOptions[0]], 2\n\n  if authoredOptions.length < 2\n    $('#chart-1-selector').hide()\n    $('#chart-2-selector').hide()\n\ngeneInfo =\n  'DR':\n    gene: 'red'\n  'drb':\n    gene: 'red'\n  'DY':\n    gene: 'yellow'\n  'dyb':\n    gene: 'yellow'\n  'DB':\n    gene: 'blue'\n  'dbb':\n    gene: 'blue'\n\nupdateAlleleFrequencies = ->\n  for allele,info of geneInfo\n    if window.CONFIG['allele frequencies']?[allele]?\n      idx = biologicaSandratSpecies.geneList[info.gene].alleles.indexOf(allele)\n      biologicaSandratSpecies.geneList[info.gene].weights[idx] = window.CONFIG['allele frequencies'][allele]\n\nupdateTimeLimitPopup = ->\n  if window.CONFIG?.timeLimitTitle?\n    $(\".time-limit-dialog>.title\").html(window.CONFIG.timeLimitTitle)\n  if window.CONFIG?.timeLimitMessage? && window.CONFIG.timeLimitMessage.length\n    $(\".time-limit-dialog>.content\").html(\"\")\n    for message in window.CONFIG.timeLimitMessage\n      $(\".time-limit-dialog>.content\").append $(\"<div>#{message}</div>\")\n\nupdateDateString = ->\n  if window.CONFIG?.chart?.timeUnits?\n    $('.xAxisLabel').html(window.CONFIG.chart.timeUnits)\n\nprocessConfig = ->\n  updateAlleleFrequencies()\n  updatePulldowns()\n  updateTimeLimitPopup()\n  updateDateString()\n\nsetChartType = (chart, type, n) ->\n  chart?.setData type\n  chart?.reset()\n  if type[0].timeBased\n    $(\"#container-#{n} .xAxisLabel\").show()\n  else\n    $(\"#container-#{n} .xAxisLabel\").hide()\n\n$ ->\n  model.isFieldModel = !/[^\\/]*html/.exec(document.location.href) or /[^\\/]*html/.exec(document.location.href)[0] == \"field.html\"\n\n  graph1Location = if model.isFieldModel then 'all' else 'ne'\n\n  helpers.preload [model, env, fastRats, slowRats], ->\n    model.run()\n    if $('#field-chart').length > 0\n      chart1 = new Chart(model, 'field-chart', graph1Location)\n      type = if window.CONFIG?.chart?.options? then window.CONFIG.chart.options[0] else defaultChartTypes[0]\n      chart1.setData chartTypes[type]\n      chart1.reset()\n    if $('#field-chart-2').length > 0\n      chart2 = new Chart(model, 'field-chart-2', 'se')\n      type = if window.CONFIG?.chart?.options? then window.CONFIG.chart.options[0] else defaultChartTypes[0]\n      chart2.setData chartTypes[type]\n      chart2.reset()\n\n  $('#view-sex-check').change ->\n    model.showSex = $(this).is(':checked')\n  $('#view-prone-check').change ->\n    model.showPropensity = $(this).is(':checked')\n  $('#view-diabetic-check').change ->\n    model.showDiabetic = $(this).is(':checked')\n\n  chart1PeriodId = null\n  chart2PeriodId = null\n  startChartPeriod = (adding, chart)->\n    if chart is 1\n      if adding\n        chart1PeriodId = 'chow-'+Date.now()\n        chart1?.startPeriod(chart1PeriodId)\n      else\n        chart1?.endPeriod(chart1PeriodId)\n    else\n      if adding\n        chart2PeriodId = 'chow-'+Date.now()\n        chart2?.startPeriod(chart2PeriodId)\n      else\n        chart2?.endPeriod(chart2PeriodId)\n\n  $('.chow-toggle').click ->\n    toggle = $(this)\n    toggle.toggleClass('on')\n    adding = toggle.hasClass('on')\n    if toggle.hasClass('all')\n      model.setChow 'all', adding\n      startChartPeriod adding, 1\n    if toggle.hasClass('north-east')\n      model.setChow 'ne', adding\n      startChartPeriod adding, 1\n    if toggle.hasClass('south-east')\n      model.setChow 'se', adding\n      startChartPeriod adding, 2\n    if toggle.hasClass('west')\n      model.setChow 'w', adding\n\n  $('#time-limit').change ->\n    chart1?.recalculateLength()\n    chart2?.recalculateLength()\n\n  $('#chart-1-selector').change ->\n    setChartType chart1, chartTypes[this.value], 1\n\n  $('#chart-2-selector').change ->\n    setChartType chart2, chartTypes[this.value], 2\n\n  configDefaults =\n    populationGenetics:\n      \"a:DR,b:DR\": 2\n      \"a:DR,a:DY,a:dbb,b:dbb\": 2\n    \"allele frequencies\":\n      DR: 1\n      drb: 4\n      DY: 1\n      dyb: 4\n      DB: 1\n      dbb: 4\n    startingRats: 27\n    diabetes:\n      red:\n        \"none\": 0\n        level1: 0.167\n        level2: 0.25\n      yellow:\n        \"none\": 0\n        level1: 0.167\n        level2: 0.25\n      blue:\n        \"none\": 0\n        level1: 0.167\n        level2: 0.25\n    chart:\n      options: [\"diabetes\", \"weight\", \"risk\", \"diabetesTime\"]\n    timeLimit: 30\n    timeLimitTitle: \"Times up!\"\n    timeLimitMessage: [\"What happened to the rats in the pens?\",\n      \"Hit reset to run the model again.\"]\n\n  window.ORIGINAL_CONFIG = window.CONFIG\n  window.CONFIG = $.extend({}, configDefaults, window.CONFIG)\n  processConfig()\n\n  container = document.getElementById(\"author-json\")\n  if container\n    if config = window.localStorage.getItem('sandrats-config')\n      window.CONFIG = $.extend(window.CONFIG, JSON.parse(config))\n    window.JSON_EDITOR = new JSONEditor(container)\n    window.JSON_EDITOR.set(window.CONFIG)\n\n    validateConfig = (config)->\n      # validate the odds of getting diabetes\n      for color in ['red','yellow','blue']\n        for level in ['none','level1','level2']\n          if config.diabetes?[color]?[level]? and not $.isNumeric(config.diabetes[color][level])\n            validationError(\"diabetes.\"+color+\".\"+level+\" should be a number\")\n            return false\n\n      for allele of geneInfo\n        if config['allele frequencies']?[allele]? and not $.isNumeric(config['allele frequencies'][allele])\n          validationError(\"'allele frequencies'.\"+allele+\" should be a number\")\n          return false\n\n      if config.startingRats? and not $.isNumeric(config.startingRats)\n        validationError(\"startingRats should be a number\")\n        return false\n\n      if config.chart?\n        if config.chart.bars? and not $.isNumeric(config.chart.bars)\n          validationError(\"chart.bars should be a number\")\n          return false\n        if config.chart.barWidth? and not $.isNumeric(config.chart.barWidth)\n          validationError(\"chart.barWidth should be a number\")\n          return false\n        if config.chart.connectingLine? and $.type(config.chart.connectingLine) isnt 'boolean'\n          validationError(\"chart.connectingLine should be true or false\")\n          return false\n\n      return true\n\n    validationError = (error)->\n      $('.validation-feedback').addClass('error').text(error)\n\n    editing = true\n    $('#author-toggle-mode').click ->\n      if editing\n        $('#author-toggle-mode').text('View Tree')\n        window.JSON_EDITOR.setMode('text')\n        editing = false\n      else\n        $('#author-toggle-mode').text('View Text')\n        window.JSON_EDITOR.setMode('tree')\n        editing = true\n\n    $('#author-update').click ->\n      newConfig = window.JSON_EDITOR.get()\n      if validateConfig(newConfig)\n        $('.validation-feedback').removeClass('error').text('OK!')\n        window.CONFIG = newConfig\n        processConfig()\n        document.getElementById(\"environment\").children[2].remove()\n        model.run()\n\n    $('#author-remember').click ->\n      newConfig = window.JSON_EDITOR.get()\n      if validateConfig(newConfig)\n        $('.validation-feedback').removeClass('error').text('OK!')\n        window.localStorage.setItem('sandrats-config', JSON.stringify(newConfig))\n\n    $('#author-reset').click ->\n      newConfig = $.extend({}, configDefaults, window.ORIGINAL_CONFIG)\n      if validateConfig(newConfig)\n        $('.validation-feedback').removeClass('error').text('OK!')\n        window.JSON_EDITOR.set(newConfig)\n\n\n","console.log(\"hi?\")\n# TODO This should probably get ported back to BioLogica.js\nBioLogica.Genetics.prototype.getRandomAllele = (exampleOfGene) ->\n  for own gene of @species.geneList\n    _allelesOfGene = @species.geneList[gene].alleles\n    _weightsOfGene = @species.geneList[gene].weights || []\n    if exampleOfGene in _allelesOfGene\n      allelesOfGene = _allelesOfGene\n      break\n\n  if _weightsOfGene.length\n    _weightsOfGene[_weightsOfGene.length] = 0 while _weightsOfGene.length < allelesOfGene.length # Fill missing allele weights with 0\n  else\n    _weightsOfGene[_weightsOfGene.length] = 1 while _weightsOfGene.length < allelesOfGene.length # Equally weighted for all alleles\n\n  totWeights = _weightsOfGene.reduce ((prev, cur)-> prev + cur), 0\n  rand = Math.random() * totWeights\n  curMax = 0\n  for weight,i in _weightsOfGene\n    curMax += weight\n    if rand <= curMax\n      return allelesOfGene[i]\n\n  console.error('somehow did not pick one: ' + allelesOfGene[0]) if console.error?\n  return allelesOfGene[0]\n\ngenes = [\n  {dominant: 'DR', recessive: 'drb' },\n  {dominant: 'DR', recessive: 'drb' },\n  {dominant: 'DY', recessive: 'dyb' },\n  {dominant: 'DY', recessive: 'dyb' },\n  {dominant: 'DB', recessive: 'dbb' },\n  {dominant: 'DB', recessive: 'dbb' }\n]\n\nmodule.exports =\n\n  name: 'Sandrats'\n\n  woo: 'hi!'\n\n  chromosomeNames: ['1', '2', 'XY']\n\n  chromosomeGeneMap:\n    '1': ['DR']\n    '2': ['DY','DB']\n    'XY': []\n\n  chromosomesLength:\n    '1': 100000000\n    '2': 100000000\n    'XY': 70000000\n\n  geneList:\n    'red':\n      alleles: ['DR', 'drb']\n      weights: [0.2, 0.8]\n      start: 10000000\n      length: 10584\n    'yellow':\n      alleles: ['DY', 'dyb']\n      weights: [0.2, 0.8]\n      start: 10000000\n      length: 8882\n    'blue':\n      alleles: ['DB', 'dbb']\n      weights: [0.2, 0.8]\n      start: 600000000\n      length: 5563\n\n  alleleLabelMap:\n    'DR': 'Red'\n    'DY': 'Yellow'\n    'DB': 'Blue'\n    'drb': 'Black'\n    'dyb': 'Black'\n    'dbb': 'Black'\n    'Y' : 'Y'\n    ''  : ''\n\n  traitRules:\n    'red diabetes':\n      'none': [['drb','drb']]\n      'level1': [['DR','drb']]\n      'level2': [['DR','DR']]\n    'yellow diabetes':\n      'none': [['dyb','dyb']]\n      'level1': [['DY','dyb']]\n      'level2': [['DY','DY']]\n    'blue diabetes':\n      'none': [['dbb','dbb']]\n      'level1': [['DB','dbb']]\n      'level2': [['DB','DB']]\n\n  ###\n    Images are handled via the populations.js species\n  ###\n  getImageName: (org) ->\n    undefined\n\n  ###\n    no lethal characteristics\n  ###\n  makeAlive: (org) ->\n    undefined\n","Species = require 'models/species'\nInanimate = require 'models/inanimate'\n\nclass Chow extends Inanimate\n  canShowInfo: ->\n    false\n\nmodule.exports = new Species\n  speciesName: \"chow\"\n  agentClass: Chow\n  defs: {}\n  traits: []\n  imageRules: [\n    {\n      name: 'plus one'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/chow.png\"\n            scale: 0.5\n            anchor:\n              x: 0.5\n              y: 1\n        }\n      ]\n    }\n  ]\n","\nhelpers = require 'helpers'\nSpecies = require 'models/species'\nBasicAnimal = require 'models/agents/basic-animal'\nAnimatedAgent = require 'models/agents/animated-agent'\nTrait   = require 'models/trait'\n\nbiologicaSpecies = require './biologica/sandrats'\n\nwindow.orgNumber ?= 1\n\nclass SandRat extends BasicAnimal\n  label: 'Sand Rat'\n  moving: false\n  moveCount: 0\n\n  step: ->\n    @wander()\n    @_incrementAge()\n\n    if @get('age') > @species.defs.MATURITY_AGE\n      @set 'current behavior', BasicAnimal.BEHAVIOR.MATING\n\n    overcrowded = false\n    if not @_isInPensModel\n      overcrowded = model.current_counts.all.total > 46\n    else\n      if @_x < model.env.width/3\n        overcrowded = model.current_counts.w.total > 30\n      else if @_y < model.env.height/2\n        overcrowded = model.current_counts.ne.total > 30\n      else\n        overcrowded = model.current_counts.se.total > 30\n\n    # mate if it's not overcrowded\n    if not overcrowded and @get('age') > 650 and @get('sex') is 'male' and @_timeLastMated < 0 and Math.random() < 0.3\n      @mate()\n\n    # die soon after if you've mated\n    if @get('age') > 700 and @_timeLastMated > 0\n      @die()\n\n    # die when you're fairly old if it's overcrowded\n    if overcrowded and @get('age') > 750 and Math.random() < 0.2\n      @die()\n\n    # die if you're very old\n    if @get('age') > 1000 and Math.random() < 0.2\n      @die()\n\n  makeNewborn: ->\n    super()\n\n    #so ugly\n    sex = if model.env.agents.length and\n      model.env.agents[model.env.agents.length-1].species.speciesName is \"sandrats\" and\n      model.env.agents[model.env.agents.length-1].get(\"sex\") is \"female\" then \"male\" else \"female\"\n\n    @set 'sex', sex\n    @set('age', 15)\n    @set('weight', 140 +  Math.floor Math.random() * 10)\n    @set('has diabetes', false)\n\n    @_isInPensModel = model.env.barriers.length > 0\n\n  #copy mate so we set timeLastMated on males as well...\n  mate: ->\n    nearest = @_nearestMate()\n    if nearest?\n      @chase(nearest)\n      if nearest.distanceSq < Math.pow(@get('mating distance'), 2) and (not @species.defs.CHANCE_OF_MATING? or Math.random() < @species.defs.CHANCE_OF_MATING)\n        max = @get('max offspring')\n        @set 'max offspring', Math.max(max, 1)\n        @reproduce(nearest.agent)\n        @set 'max offspring', max\n        @_timeLastMated = @environment.date\n        nearest.agent._timeLastMated = @environment.date          # ADDED THIS LINE\n    else\n      @wander(@get('speed') * Math.random() * 0.75)\n\n  resetGeneticTraits: ()->\n    super()\n    @set 'genome', @_genomeButtonsString()\n    @set 'prone to diabetes', @get('red diabetes') isnt 'none' or @get('yellow diabetes') isnt 'none' or @get('blue diabetes') isnt 'none'\n\n  _genomeButtonsString: ()->\n    alleles = @organism.getAlleleString().replace(/a:/g,'').replace(/b:/g,'').replace(/,/g, '')\n    alleles = alleles.replace(/d[ryb]b/g, '<span class=\"allele black\"></span>')\n    alleles = alleles.replace(/DR/g, '<span class=\"allele red\"></span>')\n    alleles = alleles.replace(/DY/g, '<span class=\"allele yellow\"></span>')\n    alleles = alleles.replace(/DB/g, '<span class=\"allele blue\"></span>')\n    return alleles\n\nmodule.exports = new Species\n  speciesName: \"sandrats\"\n  agentClass: SandRat\n  geneticSpecies: biologicaSpecies\n  defs:\n    CHANCE_OF_MUTATION: 0\n    INFO_VIEW_SCALE: 2\n    MATURITY_AGE: 80\n    INFO_VIEW_PROPERTIES:\n      \"Weight (g):\": 'weight'\n      \"\": 'genome'\n  traits: [\n    new Trait {name: 'speed', default: 6 }\n    new Trait {name: 'vision distance', default: 10000 }\n    new Trait {name: 'mating distance', default: 10000 }\n    new Trait {name: 'max offspring',   default:  3 }\n    new Trait {name: 'min offspring',   default:  2 }\n    new Trait {name: 'weight',   min:  140, max: 160 }\n    new Trait {name: 'prone to diabetes', default: false }\n    new Trait {name: 'red diabetes', possibleValues: [''], isGenetic: true, isNumeric: false }\n    new Trait {name: 'yellow diabetes', possibleValues: [''], isGenetic: true, isNumeric: false }\n    new Trait {name: 'blue diabetes', possibleValues: [''], isGenetic: true, isNumeric: false }\n    new Trait {name: 'has diabetes', default:  false }\n  ]\n  imageProperties:\n    initialFlipDirection: \"right\"\n  imageRules: [\n    {\n      name: 'diabetic'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/diabetic-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showDiabetic and agent.get('has diabetes')\n        }\n      ]\n    }\n    {\n      name: 'prone'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/prone-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showPropensity and agent.get('prone to diabetes')\n        }\n      ]\n    }\n    {\n      name: 'sex'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/female-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showSex and agent.get('sex') is 'male'\n        }\n        {\n          image:\n            path: \"images/agents/male-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showSex and agent.get('sex') is 'female'\n        }\n      ]\n    }\n    {\n      name: 'rats'\n      contexts: ['environment','carry-tool']\n      rules: [\n        {\n          image:\n            path: \"images/agents/sandrat-obese.png\"\n            scale: 0.9\n            anchor:\n              x: 0.6\n              y: 0.9\n          useIf: (agent)-> agent.get('weight') > 180\n        }\n        {\n          image:\n            path: \"images/agents/sandrat-skinny.png\"\n            scale: 0.8\n            anchor:\n              x: 0.6\n              y: 0.9\n        }\n      ]\n    }\n    {\n      name: 'rats info tool'\n      contexts: ['info-tool']\n      rules: [\n        {\n          image:\n            path: \"images/agents/sandrat-obese.png\"\n            scale: 0.9\n            anchor:\n              x: 0.6\n              y: 0.9\n          useIf: (agent)-> agent.get('weight') > 180\n        }\n        {\n          image:\n            path: \"images/agents/sandrat-skinny.png\"\n            scale: 0.8\n            anchor:\n              x: 0.6\n              y: 0.9\n        }\n      ]\n    }\n  ]\n","\nhelpers = require 'helpers'\nSpecies = require 'models/species'\nBasicAnimal = require 'models/agents/basic-animal'\nAnimatedAgent = require 'models/agents/animated-agent'\nTrait   = require 'models/trait'\n\nbiologicaSpecies = require './biologica/sandrats'\n\nwindow.orgNumber ?= 1\n\nclass SandRat extends BasicAnimal\n  label: 'Sand Rat'\n  moving: false\n  moveCount: 0\n\n  step: ->\n    @wander()\n    @_incrementAge()\n\n    if @get('age') > @species.defs.MATURITY_AGE\n      @set 'current behavior', BasicAnimal.BEHAVIOR.MATING\n\n    overcrowded = false\n    if not @_isInPensModel\n      overcrowded = model.current_counts.all.total > 46\n    else\n      if @_x < model.env.width/3\n        overcrowded = model.current_counts.w.total > 30\n      else if @_y < model.env.height/2\n        overcrowded = model.current_counts.ne.total > 30\n      else\n        overcrowded = model.current_counts.se.total > 30\n\n    # mate if it's not overcrowded\n    if not overcrowded and @get('age') > 170 and @get('sex') is 'male' and @_timeLastMated < 0 and Math.random() < 0.3\n      @mate()\n\n    # die soon after if you've mated\n    if @get('age') > 180 and @_timeLastMated > 0\n      @die()\n\n    # die when you're fairly old if it's overcrowded\n    if overcrowded and @get('age') > 250 and Math.random() < 0.2\n      @die()\n\n    # die if you're very old\n    if @get('age') > 400 and Math.random() < 0.2\n      @die()\n\n  makeNewborn: ->\n    super()\n\n    #so ugly\n    sex = if model.env.agents.length and\n      model.env.agents[model.env.agents.length-1].species.speciesName is \"sandrats\" and\n      model.env.agents[model.env.agents.length-1].get(\"sex\") is \"female\" then \"male\" else \"female\"\n\n    @set 'sex', sex\n    @set('age', Math.floor Math.random() * 80)\n    @set('weight', 140 +  Math.floor Math.random() * 20)\n    @set('has diabetes', false)\n\n    @_isInPensModel = model.env.barriers.length > 0\n\n  #copy mate so we set timeLastMated on males as well...\n  mate: ->\n    nearest = @_nearestMate()\n    if nearest?\n      @chase(nearest)\n      if nearest.distanceSq < Math.pow(@get('mating distance'), 2) and (not @species.defs.CHANCE_OF_MATING? or Math.random() < @species.defs.CHANCE_OF_MATING)\n        max = @get('max offspring')\n        @set 'max offspring', Math.max(max, 1)\n        @reproduce(nearest.agent)\n        @set 'max offspring', max\n        @_timeLastMated = @environment.date\n        nearest.agent._timeLastMated = @environment.date          # ADDED THIS LINE\n    else\n      @wander(@get('speed') * Math.random() * 0.75)\n\n  resetGeneticTraits: ()->\n    super()\n    @set 'genome', @_genomeButtonsString()\n    @set 'prone to diabetes', @get('red diabetes') isnt 'none' or @get('yellow diabetes') isnt 'none' or @get('blue diabetes') isnt 'none'\n\n  _genomeButtonsString: ()->\n    alleles = @organism.getAlleleString().replace(/a:/g,'').replace(/b:/g,'').replace(/,/g, '')\n    alleles = alleles.replace(/d[ryb]b/g, '<span class=\"allele black\"></span>')\n    alleles = alleles.replace(/DR/g, '<span class=\"allele red\"></span>')\n    alleles = alleles.replace(/DY/g, '<span class=\"allele yellow\"></span>')\n    alleles = alleles.replace(/DB/g, '<span class=\"allele blue\"></span>')\n    return alleles\n\nmodule.exports = new Species\n  speciesName: \"sandrats\"\n  agentClass: SandRat\n  geneticSpecies: biologicaSpecies\n  defs:\n    CHANCE_OF_MUTATION: 0\n    INFO_VIEW_SCALE: 2\n    MATURITY_AGE: 20\n    INFO_VIEW_PROPERTIES:\n      \"Weight (g):\": 'weight'\n      \"\": 'genome'\n  traits: [\n    new Trait {name: 'speed', default: 6 }\n    new Trait {name: 'vision distance', default: 10000 }\n    new Trait {name: 'mating distance', default: 10000 }\n    new Trait {name: 'max offspring',   default:  3 }\n    new Trait {name: 'min offspring',   default:  2 }\n    new Trait {name: 'weight',   min:  140, max: 160 }\n    new Trait {name: 'prone to diabetes', default: false }\n    new Trait {name: 'red diabetes', possibleValues: [''], isGenetic: true, isNumeric: false }\n    new Trait {name: 'yellow diabetes', possibleValues: [''], isGenetic: true, isNumeric: false }\n    new Trait {name: 'blue diabetes', possibleValues: [''], isGenetic: true, isNumeric: false }\n    new Trait {name: 'has diabetes', default:  false }\n  ]\n  imageProperties:\n    initialFlipDirection: \"right\"\n  imageRules: [\n    {\n      name: 'diabetic'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/diabetic-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showDiabetic and agent.get('has diabetes')\n        }\n      ]\n    }\n    {\n      name: 'prone'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/prone-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showPropensity and agent.get('prone to diabetes')\n        }\n      ]\n    }\n    {\n      name: 'sex'\n      contexts: ['environment']\n      rules: [\n        {\n          image:\n            path: \"images/agents/female-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showSex and agent.get('sex') is 'male'\n        }\n        {\n          image:\n            path: \"images/agents/male-stack.png\"\n            scale: 0.4\n            anchor:\n              x: 0.5\n              y: 0.7\n          useIf: (agent)-> model.showSex and agent.get('sex') is 'female'\n        }\n      ]\n    }\n    {\n      name: 'rats'\n      contexts: ['environment','carry-tool']\n      rules: [\n        {\n          image:\n            path: \"images/agents/sandrat-obese.png\"\n            scale: 0.9\n            anchor:\n              x: 0.6\n              y: 0.9\n          useIf: (agent)-> agent.get('weight') > 180\n        }\n        {\n          image:\n            path: \"images/agents/sandrat-skinny.png\"\n            scale: 0.8\n            anchor:\n              x: 0.6\n              y: 0.9\n        }\n      ]\n    }\n    {\n      name: 'rats info tool'\n      contexts: ['info-tool']\n      rules: [\n        {\n          image:\n            path: \"images/agents/sandrat-obese.png\"\n            scale: 0.9\n            anchor:\n              x: 0.6\n              y: 0.9\n          useIf: (agent)-> agent.get('weight') > 180\n        }\n        {\n          image:\n            path: \"images/agents/sandrat-skinny.png\"\n            scale: 0.8\n            anchor:\n              x: 0.6\n              y: 0.9\n        }\n      ]\n    }\n  ]\n"]}