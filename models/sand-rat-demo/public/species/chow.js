// Generated by CoffeeScript 1.9.1
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  require.register("species/chow", function(exports, require, module) {
    var Chow, Inanimate, Species;
    Species = require('models/species');
    Inanimate = require('models/inanimate');
    Chow = (function(superClass) {
      extend(Chow, superClass);

      function Chow() {
        return Chow.__super__.constructor.apply(this, arguments);
      }

      Chow.prototype.canShowInfo = function() {
        return false;
      };

      return Chow;

    })(Inanimate);
    return module.exports = new Species({
      speciesName: "chow",
      agentClass: Chow,
      defs: {},
      traits: [],
      imageRules: [
        {
          name: 'plus one',
          contexts: ['environment'],
          rules: [
            {
              image: {
                path: "images/agents/chow.png",
                scale: 0.5,
                anchor: {
                  x: 0.5,
                  y: 1
                }
              }
            }
          ]
        }
      ]
    });
  });

}).call(this);
