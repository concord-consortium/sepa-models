// Generated by CoffeeScript 1.9.1
(function() {
  var Rule;

  Rule = require('models/rule');

  require.register("environments/rules", function(exports, require, module) {
    var diabetesChance, worstChance;
    worstChance = 0.2;
    diabetesChance = function(agent) {
      if (agent.get('prone to diabetes') === 'level1') {
        return worstChance * (1 / 6);
      } else if (agent.get('prone to diabetes') === 'level2') {
        return worstChance * (2 / 6);
      } else if (agent.get('prone to diabetes') === 'level3') {
        return worstChance * (3 / 6);
      } else if (agent.get('prone to diabetes') === 'level4') {
        return worstChance * (4 / 6);
      } else if (agent.get('prone to diabetes') === 'level5') {
        return worstChance * (5 / 6);
      } else if (agent.get('prone to diabetes') === 'level6') {
        return worstChance;
      } else {
        return 0;
      }
    };
    return module.exports = {
      init: function(env) {
        env.addRule(new Rule({
          test: function(agent) {
            return agent.species.speciesName === "sandrats" && agent.get('chow') && agent.get('weight') < 220 && Math.random() < 0.15;
          },
          action: function(agent) {
            return agent.set('weight', agent.get('weight') + Math.floor(Math.random() * 5));
          }
        }));
        env.addRule(new Rule({
          test: function(agent) {
            return agent.species.speciesName === "sandrats" && agent.get('chow') !== true && agent.get('weight') > 155 && Math.random() < 0.15;
          },
          action: function(agent) {
            return agent.set('weight', agent.get('weight') - Math.floor(Math.random() * 5));
          }
        }));
        env.addRule(new Rule({
          test: function(agent) {
            var w;
            return agent.species.speciesName === "sandrats" && agent.get('has diabetes') !== true && agent.get('prone to diabetes') !== 'not prone' && (w = agent.get('weight')) > 170 && Math.random() < (((w - 170) / 30) * diabetesChance(agent));
          },
          action: function(agent) {
            return agent.set('has diabetes', true);
          }
        }));
        return env.addRule(new Rule({
          test: function(agent) {
            var w;
            return agent.species.speciesName === "sandrats" && agent.get('has diabetes') === true && (w = agent.get('weight')) < 170 && Math.random() < ((-(w - 170) / 20) * (worstChance - diabetesChance(agent)));
          },
          action: function(agent) {
            return agent.set('has diabetes', false);
          }
        }));
      }
    };
  });

}).call(this);
